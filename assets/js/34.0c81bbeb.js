(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{430:function(a,t,i){"use strict";i.r(t);var e=i(56),n=Object(e.a)({},(function(){var a=this,t=a.$createElement,i=a._self._c||t;return i("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[i("h1",{attrs:{id:"动画"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#动画"}},[a._v("#")]),a._v(" 动画")]),a._v(" "),i("h3",{attrs:{id:"css-动画优点"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#css-动画优点"}},[a._v("#")]),a._v(" css 动画优点")]),a._v(" "),i("ol",[i("li",[a._v("创建比较容易，简单的动画都不需要 JavaScript 就能实现。")]),a._v(" "),i("li",[a._v("动画运行的效果，甚至可以在低性能的系统上渲染。")]),a._v(" "),i("li",[a._v("浏览器来控制动画顺序，允许浏览器优化性能和效果， 可以降低频率。")])]),a._v(" "),i("h3",{attrs:{id:"使用"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#使用"}},[a._v("#")]),a._v(" 使用")]),a._v(" "),i("p",[a._v("animation 创建动画。 动画的表现是由使用 @keyframes 规则实现的。")]),a._v(" "),i("ul",[i("li",[a._v("animation-delay 延迟时间")]),a._v(" "),i("li",[a._v("animation-direction")]),a._v(" "),i("li",[a._v("animation-duration 周期时间")]),a._v(" "),i("li",[a._v("animation-iteration-count 重复的次数   infinite（表示无限重复）")]),a._v(" "),i("li",[a._v("animation-name 名称")]),a._v(" "),i("li",[a._v("animation-play-state 允许暂停和恢复动画。")])]),a._v(" "),i("h3",{attrs:{id:"keyframes"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#keyframes"}},[a._v("#")]),a._v(" keyframes")]),a._v(" "),i("p",[a._v("建立两个或两个以上的关键帧来确定当前时间点的实现。")]),a._v(" "),i("ul",[i("li",[a._v("0% 表示第一时刻。 100% 表示最终时刻。")]),a._v(" "),i("li",[a._v("from 第一时刻。 to 最终时刻。")])]),a._v(" "),i("h3",{attrs:{id:"js来控制"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#js来控制"}},[a._v("#")]),a._v(" js来控制")]),a._v(" "),i("ul",[i("li",[a._v("e.addEventListener('animationstart', () => {});")]),a._v(" "),i("li",[a._v("e.addEventListener('animationend', () => {});")]),a._v(" "),i("li",[a._v("e.addEventListener('animationiteration', () => {});")])])])}),[],!1,null,null,null);t.default=n.exports}}]);