(window.webpackJsonp=window.webpackJsonp||[]).push([[60],{458:function(e,t,l){"use strict";l.r(t);var a=l(56),r=Object(a.a)({},(function(){var e=this,t=e.$createElement,l=e._self._c||t;return l("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[l("h1",{attrs:{id:"弹性布局"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#弹性布局"}},[e._v("#")]),e._v(" 弹性布局")]),e._v(" "),l("p",[e._v("传统的 float、position 布局兼容性虽然好，但是布局方面存在局限性。")]),e._v(" "),l("ol",[l("li",[e._v("垂直居中一块内容。")]),e._v(" "),l("li",[e._v("排列布局子项。")]),e._v(" "),l("li",[e._v("实现多列布局。")])]),e._v(" "),l("p",[e._v("尽管可以实现，但是却不是很容易。")]),e._v(" "),l("h3",{attrs:{id:"display-flex"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#display-flex"}},[e._v("#")]),e._v(" display: flex;")]),e._v(" "),l("p",[e._v("给父容器设置 flex，然后子项会进行一个排版。")]),e._v(" "),l("h3",{attrs:{id:"flex-模型"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#flex-模型"}},[e._v("#")]),e._v(" flex 模型")]),e._v(" "),l("ul",[l("li",[e._v("主轴: 沿着 flex 元素放置的方向延伸的轴. 开始被称为 main start 和 main end;")]),e._v(" "),l("li",[e._v("交叉轴：垂直于 flex 元素放置方向的轴。 cross start 和 cross end.")]),e._v(" "),l("li",[e._v("父容器称为 flex 容器。")]),e._v(" "),l("li",[e._v("父容器里面的项称为 flex 项。")])]),e._v(" "),l("h3",{attrs:{id:"flex-direction"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#flex-direction"}},[e._v("#")]),e._v(" flex-direction")]),e._v(" "),l("ul",[l("li",[e._v("row 默认的，行向排版。")]),e._v(" "),l("li",[e._v("column 列项排版。")])]),e._v(" "),l("h3",{attrs:{id:"flex-wrap"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#flex-wrap"}},[e._v("#")]),e._v(" flex-wrap")]),e._v(" "),l("ul",[l("li",[e._v("wrap  会发生子项溢出，设置 wrap，可以任何益处的换到下一行。")])]),e._v(" "),l("h3",{attrs:{id:"flex-flow"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#flex-flow"}},[e._v("#")]),e._v(" flex-flow")]),e._v(" "),l("p",[e._v("是 flex-direction 和 flex-wrap 的缩写形式")]),e._v(" "),l("p",[e._v("flex-flow: row wrap;")]),e._v(" "),l("h3",{attrs:{id:"flex-项的尺寸"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#flex-项的尺寸"}},[e._v("#")]),e._v(" flex 项的尺寸")]),e._v(" "),l("p",[e._v("用来分配 flex 项占用的空间的比例。")]),e._v(" "),l("ul",[l("li",[l("p",[e._v("flex: 1;")])]),e._v(" "),l("li",[l("p",[e._v("flex: 2;")])]),e._v(" "),l("li",[l("p",[e._v("flex: 1 200px; 先给 200px 可用空间，大于200就使用 1 来占用。")])])]),e._v(" "),l("h3",{attrs:{id:"flex-缩写"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#flex-缩写"}},[e._v("#")]),e._v(" flex 缩写")]),e._v(" "),l("h3",{attrs:{id:"align-items"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#align-items"}},[e._v("#")]),e._v(" align-items")]),e._v(" "),l("p",[e._v("控制 flex 项在交叉轴上的位置")]),e._v(" "),l("ul",[l("li",[e._v("stretch 默认值, 会使 flex 项沿着交叉轴的方向拉伸填充父容器。父容器没有固定宽度，则 flex 项于最长的 flex 项保持一样的长。")]),e._v(" "),l("li",[e._v("center 使得 flex 项高度保持原有的高度。会交叉居中.")]),e._v(" "),l("li",[e._v("flex-start")]),e._v(" "),l("li",[e._v("flex-end")])]),e._v(" "),l("h3",{attrs:{id:"justify-content"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#justify-content"}},[e._v("#")]),e._v(" justify-content")]),e._v(" "),l("p",[e._v("控制 flex 在主轴上的位置。")]),e._v(" "),l("ul",[l("li",[e._v("flex-start")]),e._v(" "),l("li",[e._v("flex-end")]),e._v(" "),l("li",[e._v("center")]),e._v(" "),l("li",[e._v("space-around 在主轴上均匀分布。两端游空间。")]),e._v(" "),l("li",[e._v("space-between 在主轴上均匀分布，不会在两端留空间。")])]),e._v(" "),l("h3",{attrs:{id:"order"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#order"}},[e._v("#")]),e._v(" order")]),e._v(" "),l("p",[e._v("order: 0;")]),e._v(" "),l("ul",[l("li",[e._v("order 默认为 0")]),e._v(" "),l("li",[e._v("order 大的显示靠后")]),e._v(" "),l("li",[e._v("order 可以负值，放在最前面")])])])}),[],!1,null,null,null);t.default=r.exports}}]);