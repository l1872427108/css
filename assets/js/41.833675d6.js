(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{438:function(a,s,t){"use strict";t.r(s);var r=t(56),v=Object(r.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"块格式化上下文-bfc"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#块格式化上下文-bfc"}},[a._v("#")]),a._v(" 块格式化上下文 (BFC)")]),a._v(" "),t("h3",{attrs:{id:"概念"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[a._v("#")]),a._v(" 概念")]),a._v(" "),t("p",[a._v("BFC, 块级格式化上下文。具有 BFC 特性的元素可以看作是隔离了的独立区域，容器里的元素不会在布局上影响到外面的元素，并且 BFC 具有普通容器所没有的一些特性。在这种布局方式下，盒子在所在的顶部一个接一个垂直排列，水平方向上撑满整个宽度 (除非内部盒子有自己的 BFC)。")]),a._v(" "),t("h3",{attrs:{id:"bfc-的内部规则"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#bfc-的内部规则"}},[a._v("#")]),a._v(" BFC 的内部规则")]),a._v(" "),t("ul",[t("li",[a._v("垂直方向的距离由 margin 决定。属于同一个 BFC 的两个相邻盒子的 margin 会发生重叠。")]),a._v(" "),t("li",[a._v("BFC 区域不会与 float盒子 重叠。")]),a._v(" "),t("li",[a._v("BFC 隔离开来的独立容器，容器里面的子元素不会影响到外面的元素。反之也是。")]),a._v(" "),t("li",[a._v("计算 BFC 的高度时，浮动元素也参与计算。")])]),a._v(" "),t("h3",{attrs:{id:"触发bfc-条件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#触发bfc-条件"}},[a._v("#")]),a._v(" 触发BFC 条件")]),a._v(" "),t("ul",[t("li",[a._v("html 跟元素")]),a._v(" "),t("li",[a._v("浮动元素： float 除 none 以外的值。")]),a._v(" "),t("li",[a._v("绝对定位： position (absolute、fixed)")]),a._v(" "),t("li",[a._v("display 为 inline-block、table-cells、flex、inline-flex")]),a._v(" "),t("li",[a._v("overflow 除了 hidden、auth、scroll")])]),a._v(" "),t("h3",{attrs:{id:"解决问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#解决问题"}},[a._v("#")]),a._v(" 解决问题")]),a._v(" "),t("p",[a._v("触发 BFC 规范的元素，可以形成一个独立的容器, 不受外界的影响，解决一些问题。")]),a._v(" "),t("h4",{attrs:{id:"解决-margin-重叠问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#解决-margin-重叠问题"}},[a._v("#")]),a._v(" 解决 margin 重叠问题")]),a._v(" "),t("div",{staticClass:"language-css extra-class"},[t("pre",{pre:!0,attrs:{class:"language-css"}},[t("code",[a._v("<div><div>\n<div></div>\n")])])]),t("p",[a._v("上下margin会使得重叠，只要出发 BFC， 使得两个盒子互不影响，就可以解决 margin 重叠。")]),a._v(" "),t("h4",{attrs:{id:"解决-margin-塌陷"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#解决-margin-塌陷"}},[a._v("#")]),a._v(" 解决 margin 塌陷")]),a._v(" "),t("div",{staticClass:"language-css extra-class"},[t("pre",{pre:!0,attrs:{class:"language-css"}},[t("code",[a._v("<div>\n    <div></div>\n</div>\n")])])]),t("p",[a._v("因为子元素 margin-top 使得父元素塌陷，我们只要使得父盒子为 BFC ，就不可以不受外面的影响。保持固定位置。")]),a._v(" "),t("h4",{attrs:{id:"解决浮动问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#解决浮动问题"}},[a._v("#")]),a._v(" 解决浮动问题")]),a._v(" "),t("div",{staticClass:"language-css extra-class"},[t("pre",{pre:!0,attrs:{class:"language-css"}},[t("code",[a._v("<div>\n    <div></div>\n</div>\n")])])]),t("p",[a._v("子元素浮动之后，父盒子没有设置 height， 导致父容器 margin 为 0，只要给父容触发 BFC， 就可以使父元素宽度回来。")]),a._v(" "),t("h4",{attrs:{id:"解决浮动覆盖问题。"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#解决浮动覆盖问题。"}},[a._v("#")]),a._v(" 解决浮动覆盖问题。")]),a._v(" "),t("div",{staticClass:"language-css extra-class"},[t("pre",{pre:!0,attrs:{class:"language-css"}},[t("code",[a._v("<div></div>\n<div>xxxxxxxx</div>\n\n")])])]),t("p",[a._v("第一个元素浮动之后，第二个元素会被第一个元素覆盖，并且第二个元素的文字会提升起来，而不会显示到第二个盒子的左侧。 我们可以将第二个元素变为 BFC， 然后就不会受到第一个元素的影响。")])])}),[],!1,null,null,null);s.default=v.exports}}]);