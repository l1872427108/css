(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{433:function(t,s,v){"use strict";v.r(s);var _=v(56),l=Object(_.a)({},(function(){var t=this,s=t.$createElement,v=t._self._c||s;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"替换元素计算规则"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#替换元素计算规则"}},[t._v("#")]),t._v(" 替换元素计算规则")]),t._v(" "),v("p",[t._v("通过修改某个属性值呈现的内容就可以被替换的元素就称为“替换元素”。")]),t._v(" "),v("p",[t._v("替换元素除了内容可替换这一特性以外。")]),t._v(" "),v("ul",[v("li",[t._v("内容外观不受页面上CSS的影响。")]),t._v(" "),v("li",[t._v("有自己的尺寸。")]),t._v(" "),v("li",[t._v("在很多css属性上有自己的一套表现规则。")]),t._v(" "),v("li",[t._v("所有替换元素都是内联水平元素。")])]),t._v(" "),v("h3",{attrs:{id:"三类尺寸"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#三类尺寸"}},[t._v("#")]),t._v(" 三类尺寸")]),t._v(" "),v("ul",[v("li",[t._v("固有尺寸。")]),t._v(" "),v("li",[t._v("HTML尺寸")]),t._v(" "),v("li",[t._v("CSS尺寸。")])]),t._v(" "),v("h3",{attrs:{id:"计算规则"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#计算规则"}},[t._v("#")]),t._v(" 计算规则")]),t._v(" "),v("ol",[v("li",[t._v("没有 css 尺寸就使用固有尺寸。")]),t._v(" "),v("li",[t._v("如果没有 css 尺寸，则使用 html 尺寸。")]),t._v(" "),v("li",[t._v("如果有css尺寸，则由css尺寸决定。")]),t._v(" "),v("li",[t._v("如果固有尺寸含有固定的宽高比例，同时仅设置了宽度或仅设置了高度，则元素依然按照固有的宽高比例显示。")]),t._v(" "),v("li",[t._v("如果都不符合，则最终宽度表现为 300像素，高度150像素。")])])])}),[],!1,null,null,null);s.default=l.exports}}]);